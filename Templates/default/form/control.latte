{syntax double}protected function createComponentControl() {
		$form = new Form();
        $where = $form->addDynamic('where', function (\Nette\Forms\Container $container) {
			$container->addSelect('col', NULL, {{$columns|noescape}})->setPrompt($this->translator->translate('common.component.control.where.col'));
			$container->addSelect('mod', NULL, $this->whereOperators)->setPrompt($this->translator->translate('common.component.control.where.mod'));
			$container->addText('val')->setAttribute('placeholder', $this->translator->translate('common.component.control.where.val'));;
            $container->addSubmit('remove', $this->translator->translate('generator.common.component.control.where.remove'))->addRemoveOnClick();
			if (isset($this->where[$this->dynamicWhereCounter])) $container->setDefaults($this->where[$this->dynamicWhereCounter++]);
        }, count($this->where) ?: 1);
        $where->addSubmit('add', $this->translator->translate('generator.common.component.control.where.add'))->addCreateOnClick(TRUE);
		$order = $form->addDynamic('order', function (\Nette\Forms\Container $container) {
			$container->addSelect('col', NULL, {{$columns|noescape}})->setPrompt($this->translator->translate('common.component.control.order.col'));
			$container->addSelect('mod', NULL, ['DESC' => 'Sestupně', 'ASC' => 'Vzestupně'])->setPrompt($this->translator->translate('common.component.control.order.mod'));
            $container->addSubmit('remove', $this->translator->translate('generator.common.component.control.order.remove'))->addRemoveOnClick();
			if (isset($this->order[$this->dOC])) {
				$container->setDefaults(['col' => mb_strpos($this->order[$this->dOC], '-') === 0 ? (mb_substr($this->order[$this->dOC], 1)) : $this->order[$this->dOC],
					'mod' => mb_strpos($this->order[$this->dOC], '-') === 0 ? 'DESC' : 'ASC'
				]);
			$this->dOC++;
		}
        }, count($this->order) ?: 1);
         $order->addSubmit('add', $this->translator->translate('generator.common.component.control.order.add'))->addCreateOnClick(TRUE);
		$limit = $form->addContainer('limit');
			$limit->addText('lim');
			$limit->addHidden('off', ($this->limit['lim'] - 1) * $this->itemsPerPage);
		$limit->setDefaults($this->limit);
		$form->addSubmit('submit', $this->translator->translate('generator.common.component.control.submit'));
        $form->onSuccess[] = $this->controlSubmit;
        return $form;
	}